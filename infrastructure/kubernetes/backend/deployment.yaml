# Kubernetes Deployment configuration for Task Management System Backend Service
# API Version: apps/v1 (Kubernetes 1.27+)
# Purpose: Production-grade deployment with high availability, security, and monitoring
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: task-management
  labels:
    app: backend
    environment: production
    version: v1
    tier: backend
    managed-by: kubernetes
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubernetes.io/change-cause: "Initial production deployment"

spec:
  # High availability configuration with 3 replicas
  replicas: 3
  
  # Zero-downtime update strategy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  
  # Pod selector configuration
  selector:
    matchLabels:
      app: backend
      tier: backend
  
  template:
    metadata:
      labels:
        app: backend
        tier: backend
        version: v1
      annotations:
        # Prometheus monitoring configuration
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
        # Configuration checksums for automatic updates
        checksum/config: "${CONFIG_CHECKSUM}"
        checksum/secrets: "${SECRETS_CHECKSUM}"
    
    spec:
      # Grace period for graceful shutdown
      terminationGracePeriodSeconds: 60
      
      # Container configuration
      containers:
      - name: backend
        image: task-management/backend:latest
        imagePullPolicy: Always
        
        # Container ports
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        
        # Resource management
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 30
        
        # Environment configuration
        envFrom:
        - configMapRef:
            name: backend-config
        - secretRef:
            name: backend-secrets
        
        # Container security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      
      # Pod security context
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      
      # High availability pod anti-affinity rules
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: backend
              topologyKey: kubernetes.io/hostname
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: backend
              topologyKey: topology.kubernetes.io/zone
      
      # Node failure and maintenance tolerations
      tolerations:
      - key: node.kubernetes.io/not-ready
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 300
      - key: node.kubernetes.io/unreachable
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 300