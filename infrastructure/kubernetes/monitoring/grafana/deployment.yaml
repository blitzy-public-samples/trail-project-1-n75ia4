# Grafana Deployment Configuration
# Version: kubernetes v1.27+
# Image: grafana/grafana:10.0.3
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
    component: monitoring
    environment: production
    tier: visualization
  annotations:
    kubernetes.io/description: "Grafana monitoring dashboard deployment for Task Management System"
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
spec:
  # High availability configuration with 2 replicas
  replicas: 2
  # Zero-downtime update strategy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        component: monitoring
      annotations:
        checksum/config: "${CONFIG_CHECKSUM}"  # Will be replaced by deployment automation
    spec:
      # Security context for running as non-root
      securityContext:
        fsGroup: 472  # Grafana group ID
        runAsUser: 472  # Grafana user ID
        runAsNonRoot: true
      serviceAccountName: grafana-service-account
      containers:
        - name: grafana
          image: grafana/grafana:10.0.3
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-secrets
                  key: admin-password
            - name: GF_INSTALL_PLUGINS
              value: "grafana-piechart-panel,grafana-worldmap-panel"
          # Resource limits and requests
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          # Volume mounts for configuration and persistent storage
          volumeMounts:
            - name: grafana-config
              mountPath: /etc/grafana
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-dashboards
              mountPath: /var/lib/grafana/dashboards
          # Liveness probe for container health checking
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          # Readiness probe for traffic serving readiness
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
      # Volumes configuration
      volumes:
        - name: grafana-config
          configMap:
            name: grafana-config
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
      # Node affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - grafana
                topologyKey: kubernetes.io/hostname
      # Tolerations for node issues
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 30
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 30