# Kubernetes Deployment manifest for Prometheus monitoring server
# Version: apps/v1 (Kubernetes 1.27+)
# Image: prom/prometheus:v2.45.0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: prometheus
    component: monitoring
    environment: production
    version: v2.45.0
  annotations:
    description: "Prometheus monitoring server for Task Management System"
spec:
  replicas: 2  # High availability configuration
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0  # Zero-downtime deployments
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      serviceAccountName: prometheus  # Required for RBAC
      securityContext:
        fsGroup: 65534  # nobody group
        runAsUser: 65534  # nobody user
        runAsNonRoot: true  # Security best practice
      containers:
        - name: prometheus
          image: prom/prometheus:v2.45.0
          args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            - --storage.tsdb.retention.time=15d  # Data retention period
            - --web.enable-lifecycle  # Enable configuration reload
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          resources:
            requests:
              cpu: "500m"    # Guaranteed CPU allocation
              memory: "2Gi"  # Guaranteed memory allocation
            limits:
              cpu: "1000m"   # Maximum CPU usage
              memory: "4Gi"  # Maximum memory usage
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
            - name: storage
              mountPath: /prometheus
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 10
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
      volumes:
        - name: config
          configMap:
            name: prometheus-config
        - name: storage
          persistentVolumeClaim:
            claimName: prometheus-storage
      terminationGracePeriodSeconds: 300  # Allow time for graceful shutdown
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - prometheus
                topologyKey: kubernetes.io/hostname