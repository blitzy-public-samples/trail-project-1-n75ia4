version: '3.8'

services:
  # Backend test service
  backend-test:
    build:
      context: ./src/backend
      target: test
    volumes:
      - ./src/backend:/app
      - /app/node_modules
    environment:
      NODE_ENV: test
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres@postgres-test:5432/taskmanagement_test
      REDIS_URL: redis://redis-test:6379
      MONGODB_URL: mongodb://mongodb-test:27017/taskmanagement_test
    command: pnpm run test
    depends_on:
      - postgres-test
      - redis-test
      - mongodb-test
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # PostgreSQL test database
  postgres-test:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: taskmanagement_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: 
      - "postgres"
      - "-c"
      - "max_connections=100"
      - "-c"
      - "shared_buffers=128MB"

  # Redis test cache
  redis-test:
    image: redis:7.0-alpine
    ports:
      - "6380:6379"
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: redis-server --save "" --appendonly no

  # MongoDB test database
  mongodb-test:
    image: mongo:6.0-focal
    environment:
      MONGO_INITDB_DATABASE: taskmanagement_test
    ports:
      - "27018:27017"
    networks:
      - test-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 3
    command: mongod --nojournal --quiet

networks:
  test-network:
    driver: bridge